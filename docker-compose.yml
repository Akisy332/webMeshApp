version: '3.10'

services:
  # ==================== INFRASTRUCTURE ====================
  traefik:
    image: traefik:v2.10
    command:
      - --configFile=/etc/traefik/traefik.yml
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/etc/traefik:ro
    networks:
      - webmesh-network

  postgresql-service:
    image: postgres:15
    container_name: postgresql-service
    environment:
      - POSTGRES_DB=telemetry_db
      - POSTGRES_USER=telemetry_user
      - POSTGRES_PASSWORD=telemetry_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - webmesh-network
    labels:
      - "traefik.enable=false" # База данных не экспонируется через Traefik

  # ==================== SECURITY & AUTH ====================
  auth-service:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    ports:
      - 8003:8003
    container_name: auth-service
    environment:
      - DATABASE_URL=postgresql://telemetry_user:telemetry_password@postgresql-service:5432/telemetry_db
      - SECRET_KEY=your-jwt-secret-key-change-in-production
    networks:
      - webmesh-network
    depends_on:
      - postgresql-service
    labels:
      - "traefik.enable=true" # Роутер для /auth/validate - БЕЗ проверки авторизации (чтобы избежать цикла)
      - "traefik.http.routers.auth-validate.entrypoints=web"
      - "traefik.http.routers.auth-validate.rule=PathPrefix(`/api/auth`) && Path(`/auth/validate`)"
      - "traefik.http.routers.auth-validate.service=auth-service"
      - "traefik.http.routers.auth-validate.middlewares=cors@file"

      # Роутер для ВСЕХ остальных эндпоинтов auth-service - С проверкой авторизации
      - "traefik.http.routers.auth-main.entrypoints=web"
      - "traefik.http.routers.auth-main.rule=PathPrefix(`/api/auth`) && !Path(`/auth/validate`)"
      - "traefik.http.routers.auth-main.service=auth-service"
      - "traefik.http.routers.auth-main.middlewares=cors@file,auth-forward@file"

      # Сервис для auth-service
      - "traefik.http.services.auth-service.loadbalancer.server.port=8003"

  # ==================== BUSINESS SERVICES ====================
  user-service:
    build:
      context: .
      dockerfile: user-service/Dockerfile
    ports:
      - 8004:8004
    container_name: user-service
    environment:
      - DATABASE_URL=postgresql://telemetry_user:telemetry_password@postgresql-service:5432/telemetry_db
      - AUTH_SERVICE_URL=http://auth-service:8003
    networks:
      - webmesh-network
    depends_on:
      - postgresql-service
      - auth-service
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.user-service.entrypoints=web"
      - "traefik.http.routers.user-service.rule=PathPrefix(`/api/users`)"
      - "traefik.http.services.user-service.loadbalancer.server.port=8004"
      - "traefik.http.routers.user-service.middlewares=auth-forward@file,cors@file"

  # ==================== FRONTEND & ADMIN ====================
  frontend-service:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: frontend-service
    environment:
      - DATABASE_URL=postgresql://telemetry_user:telemetry_password@postgresql-service:5432/telemetry_db
      - AUTH_SERVICE_URL=http://auth-service:8003
      - API_GATEWAY_URL=http://traefik:80
    networks:
      - webmesh-network
    depends_on:
      - postgresql-service
      - auth-service
    labels:
      - "traefik.enable=true"

      # Роутер для корневого пути "/" с более высоким приоритетом
      - "traefik.http.routers.frontend-root.rule=Path(`/`) || Path(`/table`) || PathPrefix(`/static/`) || PathPrefix(`/socket.io`)"
      - "traefik.http.routers.frontend-root.service=frontend"
      - "traefik.http.routers.frontend-root.entrypoints=web"
      - "traefik.http.routers.frontend-root.priority=100"
      - "traefik.http.routers.frontend-root.middlewares=cors@file"

      # Основной роутер для остальных путей
      - "traefik.http.routers.frontend.rule=PathPrefix(`/`) || PathPrefix(`/api/sessions`) || !PathPrefix(`/auth/validate`)"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.routers.frontend.priority=10"
      - "traefik.http.routers.frontend.middlewares=auth-forward@file,cors@file"

      - "traefik.http.services.frontend.loadbalancer.server.port=5000"

volumes:
  postgres_data:


networks:
  webmesh-network:
    driver: bridge
